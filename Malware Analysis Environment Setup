# Building a malware analysis virtual machine
Goal: Build a Windows 11 vm that is isolated from the internet and host, resetable with checkpoints, and configured to analyze malware.
The configurations shown are my personal settings. See the references section 

## Prerequisites
- update Windows 11
- verify Hyper-V is enabled with admin powershell: `Get-WindowsOptionalFeature -Online -FeatureName Microsoft-Hyper-V`

<details><summary>Enable Hyper-V</summary>
- launch powershell as admin
- run command: `Enable-WindowsOptionalFeature -Online -FeatureName Microsoft-Hyper-V -All`
- restart the host machine
</details>

## Environment build
- create a private switch (Virtual Switch Manager -> Private -> Create Virtual Switch), ensure connection type is set to private network
- create a gen-2 vm VM:
	- 4096 MB memory, do not use dynamic memory
  	- set the connection to the private switch created above
   	- 120gb virtual hard disk (VHDX)
- change key configurations
	- disable enhanced session mode (Hyper-V settings)
	- disable guest services (vm settings -> Integration Services)
	- disable data exchange (vm settings -> Integration Services)
	- disable automatic checkpoints (vm settings -> Checkpoints)
	- ensure Secure Boot is enabled with the Microsoft Windows template (vm settings -> Security)
- boot the VM and install Windows11 with an iso file - don't sign in with any personal Microsoft account

A private switch disables network connections to the host machine and internet. Gen-2 VMs have secure boot enabled by default which ensures only trusted software runs during startup. Manual checkpoint ensures all checkpoints are deliberate to avoid reverting to an infected state. Disabling enhanced session mode, guest services, and data exchange avoids communication between the host and VM such as file copy, clipboard, and metadata exchange.

## VM Configuration
**Note:** an internet connection is required to perform the following steps. Go the vm settings -> Network Adapter and set the virtual switch to an external network connection type. **DO NOT INTERACT WITH MALWARE WHILE CONNECTED**
- apple all windows updates
- create a checkpoint named 'baseline'
- install analysis tools via FLARE-VM
<details><summary>FLARE-VM</summary>
	
- https://github.com/mandiant/flare-vm/tree/main
- installs all the necessary tools I use to analyze malware; https://github.com/mandiant/flare-vm/blob/main/config.xml to see what's included
</details>

- disable automatic windows updates, Tamper Protection, and anti-malware solutions (Windows Defender). instructions are included in the FLARE-VM documentation
- **change the network adapter back to a private switch**
- create a checkpoint named 'clean'

The baseline checkpoint is incase your tool install process fails. Disabling automatic updates prevents unintended reboots and environment drift. Disabling tamper protection and anti-malware solutions allows malware to execute without intervention. The clean checkpoint serves as your go-to reversion point when you begin analyzing a new sample or want to reconnect to the internet. It is critical to ensure your network switch is private (no internet connection) prior to createing your analysis-ready checkpoint. This is an easy setting to overlook and should always be verified before interacting with malware.

## Proof checks
Open an admin powershell in each environment and run these commands to verify a successful setup.

**isolation**
- vm: `Test-NetConnection 1.1.1.1 -InformationLevel Quiet` → False
- vm: `Resolve-DnsName microsoft.com` → fails
- host: `ping <vm-ip>` → fails
	- run `ipconfig` in the vm to find IvP4 address
- host: `Get-VMSwitch -Name 'your_switch_name' | select SwitchType` → Private 

**integration off**
- host: `Get-VMIntegrationService -VMName 'your_vm_name' | ? Name -match 'Guest|Clipboard' | ft Name,Enabled` → False
- host: `Get-VMHost | select EnableEnhancedSessionMode` → False 

**checkpoints**
- host: `Get-VM -Name 'your_vm_name' | select AutomaticCheckpointsEnabled` → False 

secure boot
- host: `Get-VMFirmware -VMName 'your_vm_name' | select SecureBoot` → On 

## Best practices
Recommendations before interacting with malware:
- private switch is selected = the vm has no internet connection
- revert to a clean checkpoint
- store malware samples in password protected zips ("infected" is a common password)
- record a hash of the sample before execution
- after analysis, revert to the clean checkpoint

## References
Enabled Hyper-V: https://learn.microsoft.com/en-us/windows-server/virtualization/hyper-v/get-started/install-hyper-v?tabs=powershell&pivots=windows

Private switch: https://learn.microsoft.com/en-us/windows-server/virtualization/hyper-v/get-started/create-a-virtual-switch-for-hyper-v-virtual-machines?tabs=hyper-v-manager&pivots=windows

Gen2 VM for secure boot: https://learn.microsoft.com/en-us/windows-server/virtualization/hyper-v/plan/should-i-create-a-generation-1-or-2-virtual-machine-in-hyper-v

FLARE-VM: https://github.com/mandiant/flare-vm/tree/main

Disable Windows Defender and Tamper Protection: https://superuser.com/questions/1757339/how-to-permanently-disable-windows-defender-real-time-protection-with-gpo/1757341#1757341

